package com.SVRPlatform.service.impl;

import java.util.HashMap;
import java.util.Map;

import com.SVRPlatform.dao.ExploitCommentDAO;
import com.SVRPlatform.dao.ExploitDAO;
import com.SVRPlatform.dao.UserDAO;
import com.SVRPlatform.model.Exploit;
import com.SVRPlatform.model.ExploitComment;
import com.SVRPlatform.model.User;
import com.SVRPlatform.service.ExploitCommentSubmitService;

public class ExploitCommentSubmitServiceImpl implements
		ExploitCommentSubmitService {
	
	private ExploitDAO exploitDAO;
	private UserDAO userDAO;
	private ExploitCommentDAO exploitCommentDAO;
	

	public ExploitDAO getExploitDAO() {
		return exploitDAO;
	}

	public void setExploitDAO(ExploitDAO exploitDAO) {
		this.exploitDAO = exploitDAO;
	}

	public UserDAO getUserDAO() {
		return userDAO;
	}

	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	public ExploitCommentDAO getExploitCommentDAO() {
		return exploitCommentDAO;
	}

	public void setExploitCommentDAO(ExploitCommentDAO exploitCommentDAO) {
		this.exploitCommentDAO = exploitCommentDAO;
	}

	@Override
	public Map<String, String> commentSubmit(int exploitId, String email,
			String content) {
		// TODO Auto-generated method stub
		Map<String, String> map = new HashMap<String, String>();
		
		if (content.compareTo("") == 0) 
			map.put("content", "empty");
		else if (content.length() > 5000) 
			map.put("content", "tooLong");
		else map.put("content", "OK");
		try{
			if (map.get("content").equals("OK")) {
				
				User user = userDAO.getUserByEmail(email);
				Exploit exploit = (Exploit) exploitDAO.getByID(new Integer(exploitId));
				if(exploit == null)
					throw new Exception("No such exploit");
				//System.out.println(exploit.getExploitId());
				ExploitComment exploitComment = new ExploitComment();
				
				exploitComment.setContent(content);
				exploitComment.setExploit(exploit);
				exploitComment.setUser(user);
				//System.out.println(exploitComment.getExploit().getExploitId());
				
				exploitCommentDAO.add(exploitComment);
				map.put("status", "success");
				
			} else {
				map.put("status", "failed");
			}
		}catch(Exception e){
			map.put("message", e.getMessage());
			map.put("status", "failed");
		}
		return map;
	}

}
