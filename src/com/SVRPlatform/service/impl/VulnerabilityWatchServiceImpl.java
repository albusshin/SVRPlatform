package com.SVRPlatform.service.impl;

import com.SVRPlatform.constants.Constants;
import com.SVRPlatform.dao.UserDAO;
import com.SVRPlatform.dao.VulnerabilityDAO;
import com.SVRPlatform.model.User;
import com.SVRPlatform.model.Vulnerability;
import com.SVRPlatform.service.VulnerabilityWatchService;

public class VulnerabilityWatchServiceImpl implements VulnerabilityWatchService {
	private UserDAO userDAO;
	private VulnerabilityDAO vulnerabilityDAO;
	
	
	public UserDAO getUserDAO() {
		return userDAO;
	}

	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	public VulnerabilityDAO getVulnerabilityDAO() {
		return vulnerabilityDAO;
	}

	public void setVulnerabilityDAO(VulnerabilityDAO vulnerabilityDAO) {
		this.vulnerabilityDAO = vulnerabilityDAO;
	}

	@Override
	public String voteUp(int vulnerabilityId, String email) {
		// TODO Auto-generated method stub
		Vulnerability vulnerability = (Vulnerability) vulnerabilityDAO.getByID(new Integer(vulnerabilityId));
		return addUpOrDown(vulnerability, true);
	}

	@Override
	public String voteDown(int vulnerabilityId, String email) {
		// TODO Auto-generated method stub
		Vulnerability vulnerability = (Vulnerability) vulnerabilityDAO.getByID(new Integer(vulnerabilityId));
		return addUpOrDown(vulnerability, false);
	}
	
	protected String addUpOrDown(Vulnerability vulnerability, boolean isUp){
		User u = vulnerability.getUser();
		if(isUp){
			vulnerability.setUp(new Integer(vulnerability.getUp() + 1));
			u.setCredit(u.getCredit() + Constants.BONUSONVULNERABILITYUPORDOWN);
		}
		else{
			vulnerability.setDown(new Integer(vulnerability.getDown() + 1));
			u.setCredit(u.getCredit() - Constants.BONUSONVULNERABILITYUPORDOWN);
		}
		vulnerabilityDAO.update(vulnerability);
		userDAO.update(u);
		return Constants.SUCCESS;
	}
	
	public boolean turnBackUp(Vulnerability vulnerability, boolean isUp){
		User u = vulnerability.getUser();
		if(isUp){
			u.setCredit(u.getCredit() - Constants.BONUSONVULNERABILITYUPORDOWN);
			vulnerability.setUp(new Integer(vulnerability.getUp() - 1));
		}
		else{
			u.setCredit(u.getCredit() + Constants.BONUSONVULNERABILITYUPORDOWN);
			vulnerability.setDown(new Integer(vulnerability.getDown() - 1));
		}
		vulnerabilityDAO.update(vulnerability);
		userDAO.update(u);
		return true;
		
	}

}
