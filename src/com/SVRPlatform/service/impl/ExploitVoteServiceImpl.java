package com.SVRPlatform.service.impl;

import com.SVRPlatform.constants.Constants;
import com.SVRPlatform.dao.ExploitDAO;
import com.SVRPlatform.dao.UserDAO;
import com.SVRPlatform.model.Exploit;
import com.SVRPlatform.model.User;
import com.SVRPlatform.service.ExploitVoteService;

public class ExploitVoteServiceImpl implements ExploitVoteService {
	private ExploitDAO exploitDAO;
	private UserDAO userDAO;
	
	public ExploitDAO getExploitDAO() {
		return exploitDAO;
	}

	public void setExploitDAO(ExploitDAO exploitDAO) {
		this.exploitDAO = exploitDAO;
	}

	public UserDAO getUserDAO() {
		return userDAO;
	}

	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	@Override
	public String voteUp(int exploitId, String email) {
		Exploit exploit = (Exploit) exploitDAO.getByID(new Integer(exploitId));
		return addUpOrDown(exploit, true);
	}

	@Override
	public String voteDown(int exploitId, String email) {
		Exploit exploit = (Exploit) exploitDAO.getByID(new Integer(exploitId));
		return addUpOrDown(exploit, false);
	}
	
	protected String addUpOrDown(Exploit exploit, boolean isUp){
		User u = exploit.getUser();
		if(isUp){
			exploit.setUp(new Integer(exploit.getUp() + 1));
			u.setCredit(u.getCredit() + Constants.BONUSONEXPLOITUPORDOWN);
		}
		else{
			exploit.setDown(new Integer(exploit.getDown() + 1));
			u.setCredit(u.getCredit() - Constants.BONUSONEXPLOITUPORDOWN);
		}
		exploitDAO.update(exploit);
		userDAO.update(u);
		return Constants.SUCCESS;
	}
	
	public boolean turnBackUp(Exploit exploit, boolean isUp){
		User u = exploit.getUser();
		if(isUp){
			u.setCredit(u.getCredit() - Constants.BONUSONEXPLOITUPORDOWN);
			exploit.setUp(new Integer(exploit.getUp() - 1));
		}
		else{
			u.setCredit(u.getCredit() + Constants.BONUSONEXPLOITUPORDOWN);
			exploit.setDown(new Integer(exploit.getDown() - 1));
		}
		exploitDAO.update(exploit);
		userDAO.update(u);
		return true;
		
	}

}
