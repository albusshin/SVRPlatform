package com.SVRPlatform.service.impl;

import java.util.LinkedList;
import java.util.List;
import java.util.ListIterator;

import com.SVRPlatform.Utils.HTMLTranscoder;
import com.SVRPlatform.dao.VulnerabilityCommentDAO;
import com.SVRPlatform.dao.VulnerabilityDAO;
import com.SVRPlatform.data.CommentData;
import com.SVRPlatform.data.VulnerabilityCommentsData;
import com.SVRPlatform.model.User;
import com.SVRPlatform.model.Vulnerability;
import com.SVRPlatform.model.VulnerabilityComment;
import com.SVRPlatform.service.VulnerabilityCommentsDisplayService;

public class VulnerabilityCommentsDisplayServiceImpl implements
		VulnerabilityCommentsDisplayService {
	private VulnerabilityDAO vulnerabilityDAO;
	private VulnerabilityCommentDAO vulnerabilityCommentDAO;
	
	public VulnerabilityDAO getVulnerabilityDAO() {
		return vulnerabilityDAO;
	}

	public void setVulnerabilityDAO(VulnerabilityDAO vulnerabilityDAO) {
		this.vulnerabilityDAO = vulnerabilityDAO;
	}

	public VulnerabilityCommentDAO getVulnerabilityCommentDAO() {
		return vulnerabilityCommentDAO;
	}

	public void setVulnerabilityCommentDAO(
			VulnerabilityCommentDAO vulnerabilityCommentDAO) {
		this.vulnerabilityCommentDAO = vulnerabilityCommentDAO;
	}


	public VulnerabilityCommentsData commentsDispalyService(
			String vulnerabilityNumber, int pageNumber, int commentsPerPage) {
		int vulnerabilityID = Integer.parseInt(vulnerabilityNumber.split("-")[2]);
		Vulnerability vulnerability =  (Vulnerability) vulnerabilityDAO.getByID(vulnerabilityID);
		
		int count =  (int) vulnerabilityCommentDAO.getCountFromOneVulnerability(vulnerability);
		VulnerabilityCommentsData vulnerabilityCommentsData = new VulnerabilityCommentsData();
		
		int firstResult = count - pageNumber * commentsPerPage;
		if (firstResult < 0) {
			commentsPerPage += firstResult;
			firstResult = 0;
		}
		List<VulnerabilityComment> comments = vulnerabilityCommentDAO.getByVulnerability(vulnerability, commentsPerPage, firstResult);
		List<CommentData> commentsData = new LinkedList<CommentData>();
		
		ListIterator<VulnerabilityComment> it = comments.listIterator();
		VulnerabilityComment comment;
		CommentData commentData;
		User user;
		while(it.hasNext()) it.next();
		while(it.hasPrevious()) {
			comment = it.previous();
			commentData = new CommentData();
			user = comment.getUser();
			
			commentData.setTitle(HTMLTranscoder.transcode(comment.getCommentTitle()));
			commentData.setContent(comment.getContent());
			commentData.setDatetime(comment.getDatetime().toString());
			commentData.setRealname(user.getRealName());
			commentData.setEmail(user.getEmail());
			commentData.setCredits(user.getCredit());
			commentsData.add(commentData);
		}

		vulnerabilityCommentsData.setCommentCount(count);
		vulnerabilityCommentsData.setCommentsData(commentsData);

		return vulnerabilityCommentsData;
	}
}
