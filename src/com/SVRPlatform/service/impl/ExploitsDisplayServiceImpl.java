package com.SVRPlatform.service.impl;

import com.SVRPlatform.dao.ExploitDAO;
import com.SVRPlatform.dao.ExploitVoteDAO;
import com.SVRPlatform.dao.UserDAO;
import com.SVRPlatform.dao.VulnerabilityDAO;
import com.SVRPlatform.data.VulnerabilityExploitsData;
import com.SVRPlatform.model.Vulnerability;
import com.SVRPlatform.service.ExploitsDisplayService;

public class ExploitsDisplayServiceImpl implements ExploitsDisplayService {
	private UserDAO userDAO;
	private VulnerabilityDAO vulnerabilityDAO;
	private ExploitDAO exploitDAO;
	private ExploitVoteDAO exploitVoteDAO;
	
	public UserDAO getUserDAO() {
		return userDAO;
	}

	public void setUserDAO(UserDAO userDAO) {
		this.userDAO = userDAO;
	}

	public VulnerabilityDAO getVulnerabilityDAO() {
		return vulnerabilityDAO;
	}

	public void setVulnerabilityDAO(VulnerabilityDAO vulnerabilityDAO) {
		this.vulnerabilityDAO = vulnerabilityDAO;
	}

	public ExploitDAO getExploitDAO() {
		return exploitDAO;
	}

	public void setExploitDAO(ExploitDAO exploitDAO) {
		this.exploitDAO = exploitDAO;
	}

	public ExploitVoteDAO getExploitVoteDAO() {
		return exploitVoteDAO;
	}

	public void setExploitVoteDAO(ExploitVoteDAO exploitVoteDAO) {
		this.exploitVoteDAO = exploitVoteDAO;
	}

	@Override
	public VulnerabilityExploitsData exploitsDisplayService(int userID,
			String vulnerabilityNumber, int pageNumber, int exploitsPerPage) {
		VulnerabilityExploitsData vulnerabilityExploitsData = new VulnerabilityExploitsData();
		
		int vulnerabilityId = Integer.parseInt(vulnerabilityNumber.split("-")[2]);
		Vulnerability vulnerability = (Vulnerability) vulnerabilityDAO.getByID(new Integer(vulnerabilityId));
		int count = (int) exploitDAO.getCountFromOneVulnerability(vulnerability);
		
		int firstResult = (pageNumber - 1) * exploitsPerPage;
		int fetchSize = exploitsPerPage;
		if (firstResult + fetchSize > count)
			fetchSize = count - firstResult;
		return null;
	}

	@Override
	public boolean ifAlreadyGiven(int userID, String vulnerabilityNumber) {
		// TODO Auto-generated method stub
		return false;
	}

}
