package com.SVRPlatform.action;

import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.interceptor.ServletRequestAware;

import com.SVRPlatform.Utils.VerifyUser;
import com.SVRPlatform.constants.Constants;
import com.SVRPlatform.service.ExploitSubmitService;
import com.opensymphony.xwork2.ActionSupport;

public class SubmitVulnerabilityExploit  extends ActionSupport implements ServletRequestAware {
	private static final long serialVersionUID = 1L;
	private String strVulnerabilityNumber;
	private String strNowPage;
	private String exploitsubmittext;
	private String strStat;
	private ExploitSubmitService exploitSubmitService;
	private HttpServletRequest request;
	private String message;

	public String getStrVulnerabilityNumber() {
		return strVulnerabilityNumber;
	}

	public void setStrVulnerabilityNumber(String strVulnerabilityNumber) {
		this.strVulnerabilityNumber = strVulnerabilityNumber;
	}

	public String getStrNowPage() {
		return strNowPage;
	}

	public void setStrNowPage(String strNowPage) {
		this.strNowPage = strNowPage;
	}

	public String getExploitsubmittext() {
		return exploitsubmittext;
	}

	public void setExploitsubmittext(String exploitsubmittext) {
		this.exploitsubmittext = exploitsubmittext;
	}

	public String getStrStat() {
		return strStat;
	}

	public void setStrStat(String strStat) {
		this.strStat = strStat;
	}

	public ExploitSubmitService getExploitSubmitService() {
		return exploitSubmitService;
	}

	public void setExploitSubmitService(ExploitSubmitService exploitSubmitService) {
		this.exploitSubmitService = exploitSubmitService;
	}

	public HttpServletRequest getRequest() {
		return request;
	}

	public void setServletRequest(HttpServletRequest request) {
		this.request = request;
	}

	public String getMessage() {
		return message;
	}

	public void setMessage(String message) {
		this.message = message;
	}

	public String execute() {
		String nowUser = VerifyUser.getNowUser(request);
		if (nowUser == null) {
			return Constants.NOTSIGNEDIN;
		}
		strNowPage = "1";
		String email = (String) request.getSession().getAttribute("email");
		Map<String, String> map = exploitSubmitService.exploitSubmit(
				strVulnerabilityNumber, email, exploitsubmittext, null);
		if (map.get("status").equals("fail")) {
			message = "There's something wrong with your inputs, please check:<br>";

			if (!(map.get("content").equals("OK"))) {
				if (map.get("content").equals("alreadySubmit"))
					message += "You have aready given a exploit for this vulnerability!";
				else
					message += "Please input your description about the exploit. ";
			}
			strStat = "wrong";
			return Constants.FAIL;
		} else {
			return Constants.SUCCESS;
		}
	}

	public String edit() {
		String nowUser = VerifyUser.getNowUser(request);
		if (nowUser == null) {
			return Constants.NOTSIGNEDIN;
		}
		String email = (String) request.getSession().getAttribute("email");
		Map<String, String> map = exploitSubmitService.exploitEdit(
				strVulnerabilityNumber, email, exploitsubmittext, null);
		if (map.get("status").equals("fail")) {
			message = "There's something wrong with your inputs, please check:\n";

			if (!(map.get("content").equals("OK"))) {
				if (map.get("content").equals("doesnotExist"))
					message += "The exploit you intend to edit doesn't exist!";
				else
					message += "Please input your description about the exploit. ";
			}
			strStat = "wrong";
			return Constants.FAIL;
		} else {
			return Constants.SUCCESS;
		}
	}
}
