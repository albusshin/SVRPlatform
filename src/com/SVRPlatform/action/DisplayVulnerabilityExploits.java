package com.SVRPlatform.action;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts2.interceptor.ServletRequestAware;
import org.apache.struts2.interceptor.ServletResponseAware;

import com.SVRPlatform.Utils.VerifyUser;
import com.SVRPlatform.constants.Constants;
import com.SVRPlatform.data.BugSolutionsData;
import com.SVRPlatform.data.SolutionData;
import com.SVRPlatform.service.SolutionsDisplayService;
import com.opensymphony.xwork2.ActionSupport;

public class DisplayVulnerabilityExploits extends ActionSupport implements
		ServletRequestAware {
	private static final long serialVersionUID = 1L;
	HttpServletRequest request;
	HttpServletResponse response;
	SolutionsDisplayService solutionsDisplayService;
	private String strBugNumber;
	private String strSolutionsAmount;
	private String strNowPage;
	private String strStat;
	private boolean isAlreadyGiven;
	private String strIsAlreadyGiven;
	
	public void setServletRequest(HttpServletRequest arg0) {
		// TODO Auto-generated method stub
		
	}

	public String execute() {
		// System.out.println("DisplaySolutions execute()");
		// System.out.println("strBugNumber" + strBugNumber);
		// System.out.println("strNowPage == " + strNowPage);
		SolutionData officialSolution = null;
		nowPage = Integer.parseInt(strNowPage);
		if (nowPage < 1)
			return "error";
		int userID = VerifyUser.getNowUserID(request);
		if (nowPage == 1) {
			officialSolution = solutionsDisplayService
					.officialSolutionDisplayService(userID, strBugNumber);
			System.out.println(userID);
			System.out.println(strBugNumber);

			// if no official solution exists
			// 我改变主意了，所以下面这个注释掉。。
			// if (officialSolution == null) {
			// officialSolution = new SolutionData();
			// officialSolution.setBest(false);
			// officialSolution.setContent("Not available.");
			// officialSolution.setCredits(0);
			// officialSolution.setDatetime("");
			// officialSolution.setDown(0);
			// officialSolution.setEmail("");
			// officialSolution.setRealname("");
			// officialSolution.setUp(0);
			// }

		}

		BugSolutionsData theData = solutionsDisplayService
				.solutionsDisplayService(userID, strBugNumber, nowPage, 5);
		solutionData = theData.getSolutionsData();
		strSolutionsAmount = theData.getSolutionCount() + "";
		isAlreadyGiven = solutionsDisplayService.ifAlreadyGiven(userID,
				strBugNumber);
		if (isAlreadyGiven) {
			strIsAlreadyGiven = "true";
		} else {
			strIsAlreadyGiven = "false";
		}
		// System.out.println("strSolutionsAmount == " + strSolutionsAmount);
		// System.out.println("before return success");
		request.setAttribute("officialSolution", officialSolution);
		if (request.getAttribute("message") == null)
			request.setAttribute("message", null);

		return Constants.SUCCESS;
	}
}
