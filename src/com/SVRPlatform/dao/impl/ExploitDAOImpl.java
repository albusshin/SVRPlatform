package com.SVRPlatform.dao.impl;

import java.io.Serializable;
import java.util.List;

import org.hibernate.FetchMode;
import org.hibernate.Session;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.Restrictions;

import com.SVRPlatform.dao.ExploitDAO;
import com.SVRPlatform.model.Exploit;
import com.SVRPlatform.model.User;
import com.SVRPlatform.model.Vulnerability;

public class ExploitDAOImpl extends BasicCommentAndSolutionDAOImpl implements ExploitDAO {

	@Override
	public Object getByID(Serializable ID) {
		// TODO Auto-generated method stub
		Session s = null;
		try{
			s = this.sessionFactory.openSession();
			Exploit exp = (Exploit) s.get(Exploit.class, ID);
			if(exp==null)
				return exp;
			exp.getUser().getEmail();
			////System.out.println(sol.getUser());
			return exp;
		} finally {
			if(s != null)
				s.close();
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Exploit> getByUserAndVulnerability(User user,
			Vulnerability vulnerability, int fetchSize, int firstResult) {
		// TODO Auto-generated method stub
		return (List<Exploit>) getByObjects(Exploit.class, false, fetchSize, firstResult, 1, vulnerability, user);
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Exploit> getByVulnerability(Vulnerability vulnerability,
			int fetchSize, int firstResult) {
		// TODO Auto-generated method stub
		Session s = this.sessionFactory.openSession();
		try{
			org.hibernate.Criteria c = s.createCriteria(Exploit.class);
			c.add(Restrictions.eq("vulnerability", vulnerability));
			c.addOrder(Order.desc("up"));
			if(fetchSize > 0)
				c.setMaxResults(fetchSize);
			if(firstResult >= 0)
				c.setFirstResult(firstResult);
			c.setFetchMode("user", FetchMode.JOIN);
			return c.list();
		} finally{
			if(s!=null)
				s.close();
		}
	}

	@SuppressWarnings("unchecked")
	@Override
	public List<Exploit> getByUser(User user, int fetchSize, int firstResult) {
		// TODO Auto-generated method stub
		return getByObjects(Exploit.class, false, fetchSize, firstResult, 5, user);
	}

	@Override
	public long getCountFromOneVulnerability(Vulnerability vulnerability) {
		// TODO Auto-generated method stub
		long count = ((Long)getByObjects(Exploit.class, true, -1, -1, 1, vulnerability)
				.get(0)).intValue();
		return count;
	}

	@Override
	public long getCountFromOneUser(User user) {
		// TODO Auto-generated method stub
		long count = ((Long)getByObjects(Exploit.class, true, -1, -1, 1, user)
				.get(0)).intValue();
		return count;
	}

}
